In the context of our design paradigm, function oriented design, our software architecture most resembles 2 Tier Architecture, 
a subset of N Tier Architecture. We can divide our code base into two distinct tiers, a presentation tier and logic tier. The presentation tier 
will include any functions dedicated to displaying or handling document elements. This tier includes index.html and style.css files as the two 
files are paramount to the UI, although they are not functions. The functions scoreBoardImages, updateScoreBoard, drawlines, and drawchess all 
interact with the HTML document which handles our UI. These UI functions have distinct functionality regarding what they display to the board, 
whether it be drawing a piece onto the canvas, or updating the scores shown. The main idea behind these functions are to display the state of 
the game as a object that is viewable to the user. The logic tier includes any function that control the state or property of the game. This 
currently includes functions that check wins, add event listeners, load images, and resets the game. This tier takes user input such as clicking 
the canvas element, new game button or events such as loading the HTML document and processes with functions. Functions like the anonymous function 
takes the user input and updates the map array and checks for win scenarios. These functions are able to call presentation tier functions and 
other logic tier functions to accomplish its functionality, whether it be to update the game, update the score, or make sure that all images are 
loaded at runtime. In essence, this project is divided into two tiers, presentation and logic. The presentation tier includes all functions related 
to UI, while the logic tier includes all functions and sub functions that change or alter the state or variable of the game.
